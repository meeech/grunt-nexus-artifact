{
  "name": "grunt-nexus-artifact",
  "version": "0.3.5",
  "description": "A grunt plugin that helps with simple nexus artifacts",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com/RallySoftware/grunt-nexus-artifact"
  },
  "keywords": [
    "grunt",
    "nexus"
  ],
  "author": {
    "name": "Nicholas Boll",
    "email": "nicholas.boll@gmail.com"
  },
  "license": "MIT",
  "dependencies": {
    "q": "0.9.3",
    "grunt": "~0.4.1",
    "grunt-contrib-compress": "~0.5.2",
    "xml2js": "0.2.3"
  },
  "readme": "# grunt-nexus-artifact\n\n> Download artifacts from a Nexus artifact repository.\n> Publish artifacts to a Nexus artifact repository.\n> Only works with Mac and Linux\n\n## Why?\nNexus does really well with binary files. The idea is a repository can build and publish artifacts and other repositories can pull down those artifacts and extract them. Built files don't need to be committed to git, which take up most of the space in git repositories.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-nexus-artifact --save-dev\n```\n\nor add the following to your package.json file:\n```js\n{\n  \"devDependencies\": {\n    \"grunt-nexus-artifact\": \"0.3.5\"\n  }\n}\n```\n\nOnce the plugin has been installed, enabled it inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-nexus-artifact');\n```\n\n## Nexus Fetch Task\n_Run this task with the `grunt nexus:target:fetch` command._\n\n### Examples\n```js\nnexus: {\n  client: {\n    url: 'http://nexus.google.com:8080',\n    repository: 'jslibraries',\n    fetch: [\n      { id: 'com.google.js:jquery:tgz:1.8.0', path: 'public/lib/jquery' }\n    ]\n  }\n}\n```\n\nIn grunt, options cascade. If all of your artifacts come from the same nexus server, you can do the following:\n```js\nnexus: {\n  options: {\n    url: 'http://nexus.google.com:8080'\n  },\n  client: {\n    options: {\n      repository: 'jslibraries'\n    },\n    fetch: [\n      { id: 'com.google.js:jquery:tgz:1.8.0', path: 'public/lib/jquery' }\n    ]\n  },\n  build: {\n    options: {\n      repository: 'jstools'\n    },\n    fetch: [\n      { id: 'com.google.js:closure:tgz:0.1.0', path: 'tools/closure' }\n    ]\n  }\n}\n```\n\n\n### Options\n\nThere are a number of options available.\n\n#### url\nType: `String`\n\nThis defines the url of your nexus repository. This should be the base URL plus port. Ex: `http://your-nexus-repository:8080`\n\n#### repository\nType: `String`\n\nThis defines the name of the repository. _Since this task uses the REST API, the repository is not inferred_\n\n#### username\nType: `String`\n\nThis is an optional parameter that will be the nexus username - may not be needed for fetches\n\n#### password\nType: `String`\n\nThis is an optional parameter that will be the nexus password - may not be needed for fetches\n\n#### fetch\nType: `Array{Object}`\n\nThis defines an array of nexus artifacts to be retrieved from nexus. Each artifact has config options:\n\n##### group_id\nType: `String`\n\nThis defines the group_id of the artifact. Ex: `com.google.js`\n\n##### name\nType: `String`\n\nThis defines the name of the artifact. Ex: `jquery`\n\n##### ext\nType: `String`\n\nAvailable extentions are `tgz`, `zip` and `jar`\nThis defines the extension of the artifact. Ex: `tgz`\n\n##### version\nType: `String`\n\nThis defines the version of the artifact. Ex: `1.8.0`\n\n##### id\nType: `String`\n\nThis is a shorthand for `group_id`, `name`, `ext` and `version`. This defines the id string of the artifact in the following format:\n```{group_id}:{name}:{ext}:{version}```\n\nEx:\n```\ncom.google.js:jquery:tgz:1.8.0\n```\n\n##### path\nType: `String`\n\nThis defines the path where the artifact will be extracted to. Ex: `public/lib/jquery`\n\n## Nexus publish task\nThe publish flag will run the publish config to push artifacts up to nexus. It uses [grunt-contrib-compress](https://github.com/gruntjs/grunt-contrib-compress) so the file configuration will be the same.\n_Run this task with the `grunt nexus:target:publish` command._\n\n### Examples\n```js\nnexus: {\n  options: {\n    url: 'http://nexus.google.com:8080',\n    repository: 'jslibraries'\n  },\n  client: {\n    files: [\n      { src: ['builds/**/*'] }\n    ],\n    options: {\n      curl: false,\n      publish: [{\n          id: 'com.mycompany.js:built-artifact:tgz',\n          version: 'my-version', \n          path: 'dist/',\n          username: 'admin',\n          password: 'admin123'\n      }]\n    }\n  }\n}\n```\n\nIn this example the `id` config is used, but the version is dropped. It can be specified in the `id` config or specified in the `version` config. This makes it easier to set the version dynamically.\n\n### Options\n\nThe options listed here are new or repurposed for publish\n\n#### path\nType `String`\n\nThis defines the temporary path for the compressed artifact.\n\n#### files\nType `Array`\n\nThis parameter comes from `grunt-contrib-compress`. You can read about it at [github.com/gruntjs/grunt-contrib-compress](https://github.com/gruntjs/grunt-contrib-compress).\nThere are some differences from the config on `grunt-contrib-compress`. First of all, `ext` is used from the artifact, so it doesn't need to be specified. `mode` is currently not supported. It will auto-configure based on the extension.\n\n#### curl\nType `Boolean`\nDefault `false`\n\nThis parameter gives the option to use curl to upload - some people have issues with uploading using Node streams (not sure why)\n\n# Release History\n* 2013-08-08  v0.2.0  Added support for publishing artifacts\n\n----\n\nContributed by Nicholas Boll of [Rally Software](http://rallysoftware.com)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/RallySoftware/grunt-nexus-artifact/issues"
  },
  "homepage": "https://github.com/RallySoftware/grunt-nexus-artifact",
  "_id": "grunt-nexus-artifact@0.3.5",
  "_shasum": "284f92b5d79e6673e728ae22edcedb7ee24d7c22",
  "_from": "grunt-nexus-artifact@0.3.5",
  "_resolved": "https://registry.npmjs.org/grunt-nexus-artifact/-/grunt-nexus-artifact-0.3.5.tgz"
}
